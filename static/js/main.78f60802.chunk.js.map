{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["paramsId","URLSearchParams","window","location","search","get","paramsToken","client","tmi","Client","options","debug","messagesLogLevel","connection","reconnect","secure","identity","username","password","channels","App","tmiInit","connect","then","data","catch","err","console","log","on","target","context","msg","self","handleClick","name","say","this","className","Button","variant","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAKMA,EAAW,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,MAC3DC,EAAc,IAAIL,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAE9DE,EAAS,IAAIC,IAAIC,OAAO,CAC5BC,QAAS,CAAEC,OAAO,EAAMC,iBAAkB,QAC1CC,WAAY,CACVC,WAAW,EACXC,QAAQ,GAEVC,SAAU,CACRC,SAAWjB,GAAuB,kBAClCkB,SAAWZ,GAA6B,IAE1Ca,SAAU,CAAC,YAqCEC,E,4MAjCbC,QAAU,WACRd,EAAOe,UAAUC,MAAK,SAACC,OACpBC,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAGdnB,EAAOsB,GAAG,WAAW,SAACC,EAAQC,EAASC,EAAKC,Q,EAK9CC,YAAc,SAACC,GACb5B,EAAO6B,IAAI,SAAU,Q,uDAGvB,WACEC,KAAKhB,Y,oBAGP,WACE,OACE,qBAAKiB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACA,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAASJ,KAAKH,YAFhB,8B,GAxBUQ,aCTHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.78f60802.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport tmi from 'tmi.js'\nimport './App.css';\n\nconst paramsId = new URLSearchParams(window.location.search).get(\"id\");\nconst paramsToken = new URLSearchParams(window.location.search).get(\"token\");\n\nconst client = new tmi.Client({\n  options: { debug: true, messagesLogLevel: \"info\" },\n  connection: {\n    reconnect: true,\n    secure: true\n  },\n  identity: {\n    username: (paramsId) ? paramsId : 'justinfan123456',\n    password: (paramsToken) ? paramsToken : ''\n  },\n  channels: ['zatd93']\n});\n\nclass App extends Component {\n  tmiInit = () => {\n    client.connect().then((data) => {\n    }).catch((err) => {\n      console.log(err)\n    });\n\n    client.on(\"message\", (target, context, msg, self) => {\n      \n    });\n  };\n\n  handleClick = (name) => {\n    client.say(\"zatd93\", \"!LP\");\n  };\n\n  componentDidMount() {\n    this.tmiInit();\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Button \n          variant='contained'\n          onClick={this.handleClick}\n        >LP Count</Button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}